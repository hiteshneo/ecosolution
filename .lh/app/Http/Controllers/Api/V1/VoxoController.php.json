{
    "sourceFile": "app/Http/Controllers/Api/V1/VoxoController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 77,
            "patches": [
                {
                    "date": 1628060675887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1628060711551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,10 @@\n         $user = Auth::user();\n \n         $validation = Validator::make($request->all(), [\n             'video' => 'required',\n-            'social_id' => 'required',\n-            'social_type' => 'required',\n-            //'device_token' => 'required',\n-            'device_type' => 'required',\n+            'description' => 'required',\n+            'audio_name' => 'required',\n         ]);\n         \n         if ($validation->fails()) {\n             //return $this->throwValidation($validation->messages()->first());\n"
                },
                {
                    "date": 1628073332307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,11 @@\n use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n use Image;\n use App\\User;\n use Illuminate\\Support\\Facades\\DB;\n-\n+use App\\Models\\VoxoMedia;\n+use App\\Models\\VoxoMediaComment;\n+use App\\Models\\VoxoMediaLike;\n /**\n  * @group Authentication\n  *\n  * Class AuthController\n@@ -41,6 +43,8 @@\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n \n+\n+\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628073477530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,13 @@\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n \n+        $saveData = new VoxoMedia();\n+        $saveData->user_id = $user->id;\n+        $saveData->video = $user->id;\n+        $saveData->description = $user->id;\n+        $saveData->audio_name = $user->id;\n+        $saveData->type = 'Video';\n \n-\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628073500378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n \n         $saveData = new VoxoMedia();\n         $saveData->user_id = $user->id;\n         $saveData->video = $user->id;\n-        $saveData->description = $user->id;\n+        $saveData->description = $request->get('description');\n         $saveData->audio_name = $user->id;\n         $saveData->type = 'Video';\n \n     }\n"
                },
                {
                    "date": 1628073509136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         $saveData = new VoxoMedia();\n         $saveData->user_id = $user->id;\n         $saveData->video = $user->id;\n         $saveData->description = $request->get('description');\n-        $saveData->audio_name = $user->id;\n+        $saveData->audio_name = $request->get('audio_name');;\n         $saveData->type = 'Video';\n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628073538660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,15 @@\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n \n+        if (isset($data['image']) && $data['image']!= null ) {\n+            $name = 'img_' . time() . $request->file('image')->getClientOriginalName();\n+            Storage::disk('pic_profile')->put($name, file_get_contents($request->file('image')->getRealPath()));\n+            $avatarImage = $name;\n+            $imgPath = Storage::disk('pic_profile')->url($name);\n+        } \n+\n         $saveData = new VoxoMedia();\n         $saveData->user_id = $user->id;\n         $saveData->video = $user->id;\n         $saveData->description = $request->get('description');\n"
                },
                {
                    "date": 1628073563267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,11 @@\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n \n-        if (isset($data['image']) && $data['image']!= null ) {\n-            $name = 'img_' . time() . $request->file('image')->getClientOriginalName();\n-            Storage::disk('pic_profile')->put($name, file_get_contents($request->file('image')->getRealPath()));\n+        if($request->hasFile('video')) {\n+            $name = 'video_' . time() . $request->file('video')->getClientOriginalName();\n+            Storage::disk('pic_profile')->put($name, file_get_contents($request->file('video')->getRealPath()));\n             $avatarImage = $name;\n             $imgPath = Storage::disk('pic_profile')->url($name);\n         } \n \n"
                },
                {
                    "date": 1628073582858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,11 +45,11 @@\n         }\n \n         if($request->hasFile('video')) {\n             $name = 'video_' . time() . $request->file('video')->getClientOriginalName();\n-            Storage::disk('pic_profile')->put($name, file_get_contents($request->file('video')->getRealPath()));\n+            Storage::disk('voxo')->put($name, file_get_contents($request->file('video')->getRealPath()));\n             $avatarImage = $name;\n-            $imgPath = Storage::disk('pic_profile')->url($name);\n+            $imgPath = Storage::disk('voxo')->url($name);\n         } \n \n         $saveData = new VoxoMedia();\n         $saveData->user_id = $user->id;\n"
                },
                {
                    "date": 1628073740659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,21 +42,32 @@\n                 'errors' => '',\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n+        $videoFile = '';\n+        if($request->hasFile('video')) {\n+            //get filename with extension\n+            $filenamewithextension = $request->file('video')->getClientOriginalName();\n+      \n+            //get filename without extension\n+            $filename = pathinfo($filenamewithextension, PATHINFO_FILENAME);\n+      \n+            //get file extension\n+            $extension = $request->file('video')->getClientOriginalExtension();\n+      \n+            //filename to store\n+            $videoFile = $filename.'_'.time().'.'.$extension;\n+           \n+            Storage::disk('voxo')->put($videoFilevideoFile, file_get_contents($request->file('video')->getRealPath()));\n \n-        if($request->hasFile('video')) {\n-            $name = 'video_' . time() . $request->file('video')->getClientOriginalName();\n-            Storage::disk('voxo')->put($name, file_get_contents($request->file('video')->getRealPath()));\n-            $avatarImage = $name;\n-            $imgPath = Storage::disk('voxo')->url($name);\n+            $saveData = new VoxoMedia();\n+            $saveData->user_id = $user->id;\n+            $saveData->video = $videoFile;\n+            $saveData->description = $request->get('description');\n+            $saveData->audio_name = $request->get('audio_name');;\n+            $saveData->type = 'Video';\n         } \n \n-        $saveData = new VoxoMedia();\n-        $saveData->user_id = $user->id;\n-        $saveData->video = $user->id;\n-        $saveData->description = $request->get('description');\n-        $saveData->audio_name = $request->get('audio_name');;\n-        $saveData->type = 'Video';\n+        \n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628073858537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n                 'errors' => '',\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n-        $videoFile = '';\n         if($request->hasFile('video')) {\n             //get filename with extension\n             $filenamewithextension = $request->file('video')->getClientOriginalName();\n       \n@@ -64,10 +63,34 @@\n             $saveData->video = $videoFile;\n             $saveData->description = $request->get('description');\n             $saveData->audio_name = $request->get('audio_name');;\n             $saveData->type = 'Video';\n-        } \n+            \n+            if($saveData->save()){\n+                $getVoxoMedia = VoxoMedia::where('id', $saveData->id)->first();\n+                $resp = [\n+                    'status' => true,\n+                    'data' => $getVoxoMedia,\n+                    'message' => 'Updated Successfully.',\n+                    'error' => false,\n+                    'errors' => '',\n+                    //'image_path' => env('ASSET_URL') . '/images/profile'\n+                ];\n+            }\n \n+        } else{\n+\n+            $resp = [\n+                'status' => true,\n+                'data' => $dataRow,\n+                'message' => 'Updated Successfully.',\n+                'error' => false,\n+                'errors' => '',\n+                //'image_path' => env('ASSET_URL') . '/images/profile'\n+            ];\n+\n+        }\n+\n         \n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628073864519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                 $getVoxoMedia = VoxoMedia::where('id', $saveData->id)->first();\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n-                    'message' => 'Updated Successfully.',\n+                    'message' => 'Upload Successfully.',\n                     'error' => false,\n                     'errors' => '',\n                     //'image_path' => env('ASSET_URL') . '/images/profile'\n                 ];\n"
                },
                {
                    "date": 1628073871783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n                 $getVoxoMedia = VoxoMedia::where('id', $saveData->id)->first();\n+                print_r($getVoxoMedia);die;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628073982612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       \n             //filename to store\n             $videoFile = $filename.'_'.time().'.'.$extension;\n            \n-            Storage::disk('voxo')->put($videoFilevideoFile, file_get_contents($request->file('video')->getRealPath()));\n+            Storage::disk('voxo')->put($videoFile, file_get_contents($request->file('video')->getRealPath()));\n \n             $saveData = new VoxoMedia();\n             $saveData->user_id = $user->id;\n             $saveData->video = $videoFile;\n"
                },
                {
                    "date": 1628074087800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n use Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n use Image;\n use App\\User;\n use Illuminate\\Support\\Facades\\DB;\n-use App\\Models\\VoxoMedia;\n+use App\\Models\\VoxoMedias;\n use App\\Models\\VoxoMediaComment;\n use App\\Models\\VoxoMediaLike;\n /**\n  * @group Authentication\n@@ -57,17 +57,17 @@\n             $videoFile = $filename.'_'.time().'.'.$extension;\n            \n             Storage::disk('voxo')->put($videoFile, file_get_contents($request->file('video')->getRealPath()));\n \n-            $saveData = new VoxoMedia();\n+            $saveData = new VoxoMedias();\n             $saveData->user_id = $user->id;\n             $saveData->video = $videoFile;\n             $saveData->description = $request->get('description');\n             $saveData->audio_name = $request->get('audio_name');;\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n-                $getVoxoMedia = VoxoMedia::where('id', $saveData->id)->first();\n+                $getVoxoMedia = VoxoMedias::where('id', $saveData->id)->first();\n                 print_r($getVoxoMedia);die;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n"
                },
                {
                    "date": 1628074987791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n             $saveData->audio_name = $request->get('audio_name');;\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n-                $getVoxoMedia = VoxoMedias::where('id', $saveData->id)->first();\n+                $getVoxoMedia = VoxoMedias::with('comments', 'likes')->where('id', $saveData->id)->first();\n                 print_r($getVoxoMedia);die;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n"
                },
                {
                    "date": 1628075118535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,10 @@\n             $saveData->audio_name = $request->get('audio_name');;\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n-                $getVoxoMedia = VoxoMedias::with('comments', 'likes')->where('id', $saveData->id)->first();\n+                $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n+                $dataRow[] = $getVoxoMedia->\n                 print_r($getVoxoMedia);die;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n"
                },
                {
                    "date": 1628075733499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,9 @@\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n-                $dataRow[] = $getVoxoMedia->\n-                print_r($getVoxoMedia);die;\n+                \n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628075758231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                 //'image_path' => env('ASSET_URL') . '/images/profile'\n             ];\n \n         }\n-\n+        return response()->json($resp, $this->statusCode);\n         \n \n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628077232430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n-                \n+                $data['id'] = $getVoxoMedia->id;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628077268685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,16 +66,16 @@\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n-                $data['id'] = $getVoxoMedia->id;\n+                \n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n                     'error' => false,\n                     'errors' => '',\n-                    //'image_path' => env('ASSET_URL') . '/images/profile'\n+                    'video_path' => env('APP_URL').'/storage/app/public/voxo/'\n                 ];\n             }\n \n         } else{\n"
                },
                {
                    "date": 1628077453658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,16 @@\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n-                \n+                $data['id'] = $getVoxoMedia->id;\n+                $data['user_id'] = $getVoxoMedia->user_id;\n+                $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n+                $data['description'] = $getVoxoMedia->description;\n+                $data['audio_name'] = $getVoxoMedia->audio_name;\n+                $data['comments'] = $getVoxoMedia->comments;\n+                $data['likes'] = $getVoxoMedia->likes;\n+                $data['users'][] = $getVoxoMedia->users;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628077466487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                 $data['description'] = $getVoxoMedia->description;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n-                $data['users'][] = $getVoxoMedia->users;\n+                $dataUser['users'] = $getVoxoMedia->users;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628077526901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,17 +65,19 @@\n             $saveData->audio_name = $request->get('audio_name');;\n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n+                $dataUser = array();\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->user_id;\n                 $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n                 $data['description'] = $getVoxoMedia->description;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n-                $dataUser['users'] = $getVoxoMedia->users;\n+                $dataU['users'] = $getVoxoMedia->users;\n+                $data['users'] = $dataU;\n                 $resp = [\n                     'status' => true,\n                     'data' => $getVoxoMedia,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628077534577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                 $dataU['users'] = $getVoxoMedia->users;\n                 $data['users'] = $dataU;\n                 $resp = [\n                     'status' => true,\n-                    'data' => $getVoxoMedia,\n+                    'data' => $data,\n                     'message' => 'Upload Successfully.',\n                     'error' => false,\n                     'errors' => '',\n                     'video_path' => env('APP_URL').'/storage/app/public/voxo/'\n"
                },
                {
                    "date": 1628077543713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n                 $dataU['users'] = $getVoxoMedia->users;\n-                $data['users'] = $dataU;\n+                $data[] = $dataU;\n                 $resp = [\n                     'status' => true,\n                     'data' => $data,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628077556258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,10 @@\n                 $data['description'] = $getVoxoMedia->description;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n-                $dataU['users'] = $getVoxoMedia->users;\n-                $data[] = $dataU;\n+                $dataU[] = $getVoxoMedia->users;\n+                $data['users'] = $dataU;\n                 $resp = [\n                     'status' => true,\n                     'data' => $data,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1628077668555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,13 @@\n                 $data['description'] = $getVoxoMedia->description;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n-                $dataU[] = $getVoxoMedia->users;\n+                $dataU['id'] = $getVoxoMedia->users->id;\n+                $dataU['nick_name'] = $getVoxoMedia->users->user_name;\n+                $dataU['name'] = $getVoxoMedia->users->name;\n+                $dataU['full_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->avatar;\n+                $dataU['thumb_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->thumb_avatar;\n                 $data['users'] = $dataU;\n                 $resp = [\n                     'status' => true,\n                     'data' => $data,\n"
                },
                {
                    "date": 1628077676069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,13 +74,15 @@\n                 $data['description'] = $getVoxoMedia->description;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n+                \n                 $dataU['id'] = $getVoxoMedia->users->id;\n                 $dataU['nick_name'] = $getVoxoMedia->users->user_name;\n                 $dataU['name'] = $getVoxoMedia->users->name;\n                 $dataU['full_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->avatar;\n                 $dataU['thumb_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->thumb_avatar;\n+                \n                 $data['users'] = $dataU;\n                 $resp = [\n                     'status' => true,\n                     'data' => $data,\n"
                },
                {
                    "date": 1628077746700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,10 @@\n                 $data['description'] = $getVoxoMedia->description;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $data['comments'] = $getVoxoMedia->comments;\n                 $data['likes'] = $getVoxoMedia->likes;\n-                \n+                $data['total_comments'] = count($getVoxoMedia->comments);\n+                $data['total_likes'] = count($getVoxoMedia->likes);\n                 $dataU['id'] = $getVoxoMedia->users->id;\n                 $dataU['nick_name'] = $getVoxoMedia->users->user_name;\n                 $dataU['name'] = $getVoxoMedia->users->name;\n                 $dataU['full_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->avatar;\n"
                },
                {
                    "date": 1628077839633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,11 +96,11 @@\n \n         } else{\n \n             $resp = [\n-                'status' => true,\n-                'data' => $dataRow,\n-                'message' => 'Updated Successfully.',\n+                'status' => false,\n+                'data' => '',\n+                'message' => 'Please upload video.',\n                 'error' => false,\n                 'errors' => '',\n                 //'image_path' => env('ASSET_URL') . '/images/profile'\n             ];\n"
                },
                {
                    "date": 1628077844998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n             $resp = [\n                 'status' => false,\n                 'data' => '',\n                 'message' => 'Please upload video.',\n-                'error' => false,\n+                'error' => true,\n                 'errors' => '',\n                 //'image_path' => env('ASSET_URL') . '/images/profile'\n             ];\n \n"
                },
                {
                    "date": 1628077850209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,8 @@\n                     'data' => $data,\n                     'message' => 'Upload Successfully.',\n                     'error' => false,\n                     'errors' => '',\n-                    'video_path' => env('APP_URL').'/storage/app/public/voxo/'\n                 ];\n             }\n \n         } else{\n@@ -101,9 +100,8 @@\n                 'data' => '',\n                 'message' => 'Please upload video.',\n                 'error' => true,\n                 'errors' => '',\n-                //'image_path' => env('ASSET_URL') . '/images/profile'\n             ];\n \n         }\n         return response()->json($resp, $this->statusCode);\n"
                },
                {
                    "date": 1628077869178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,8 @@\n                 ];\n             }\n \n         } else{\n-\n             $resp = [\n                 'status' => false,\n                 'data' => '',\n                 'message' => 'Please upload video.',\n@@ -107,5 +106,7 @@\n         return response()->json($resp, $this->statusCode);\n         \n \n     }\n+\n+    \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628082967384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,10 +103,12 @@\n             ];\n \n         }\n         return response()->json($resp, $this->statusCode);\n-        \n+    }\n \n+    public function saveComment(Request $request){\n+\n     }\n \n-    \n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628084342607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,26 @@\n         return response()->json($resp, $this->statusCode);\n     }\n \n     public function saveComment(Request $request){\n+        $user = Auth::user();\n \n+        $validation = Validator::make($request->all(), [\n+            'media_id' => 'required',\n+            'comment' => 'required',\n+        ]);\n+        $data = $request->all();\n+        if ($validation->fails()) {\n+            //return $this->throwValidation($validation->messages()->first());\n+            $resp = [\n+                'status' => false,\n+                'data' => '',\n+                'message' => $validation->messages()->first(),\n+                'error' => true,\n+                'errors' => '',\n+            ];\n+            return response()->json($resp, $this->statusCode);\n+        }\n     }\n \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628084580046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,14 @@\n                 'errors' => '',\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n+        $arr = [\n+            'user_id' => $user->id,\n+            'voxo_media_id' => $request->get('media_id'),\n+            'comment' => $request->get('comment'),\n+        ];\n+        VoxoMediaComment::\n     }\n \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628084589801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n             'user_id' => $user->id,\n             'voxo_media_id' => $request->get('media_id'),\n             'comment' => $request->get('comment'),\n         ];\n-        VoxoMediaComment::\n+        VoxoMediaComment::create($arr);\n     }\n \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628084605288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,8 +130,16 @@\n             'voxo_media_id' => $request->get('media_id'),\n             'comment' => $request->get('comment'),\n         ];\n         VoxoMediaComment::create($arr);\n+\n+        return $this->respond([\n+            'status' => true,\n+            'message' => 'Cmment successfully.',\n+            'data' => $resposeArray,\n+            'error' => false,\n+            'errors' => '',\n+        ]);\n     }\n \n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628084611897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,10 +133,10 @@\n         VoxoMediaComment::create($arr);\n \n         return $this->respond([\n             'status' => true,\n-            'message' => 'Cmment successfully.',\n-            'data' => $resposeArray,\n+            'message' => 'Comment successfully.',\n+            'data' => '',\n             'error' => false,\n             'errors' => '',\n         ]);\n     }\n"
                },
                {
                    "date": 1628085039221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,6 +140,40 @@\n             'errors' => '',\n         ]);\n     }\n \n+    public function saveLikes(Request $request){\n+        $user = Auth::user();\n \n+        $validation = Validator::make($request->all(), [\n+            'media_id' => 'required',\n+            'comment' => 'required',\n+        ]);\n+        $data = $request->all();\n+        if ($validation->fails()) {\n+            //return $this->throwValidation($validation->messages()->first());\n+            $resp = [\n+                'status' => false,\n+                'data' => '',\n+                'message' => $validation->messages()->first(),\n+                'error' => true,\n+                'errors' => '',\n+            ];\n+            return response()->json($resp, $this->statusCode);\n+        }\n+        $arr = [\n+            'user_id' => $user->id,\n+            'voxo_media_id' => $request->get('media_id'),\n+            'like_count' => $request->get('like'),\n+        ];\n+        VoxoMediaLike::create($arr);\n+\n+        return $this->respond([\n+            'status' => true,\n+            'message' => 'Comment successfully.',\n+            'data' => '',\n+            'error' => false,\n+            'errors' => '',\n+        ]);\n+    }\n+\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1628085267833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n         VoxoMediaLike::create($arr);\n \n         return $this->respond([\n             'status' => true,\n-            'message' => 'Comment successfully.',\n+            'message' => 'Like successfully.',\n             'data' => '',\n             'error' => false,\n             'errors' => '',\n         ]);\n"
                },
                {
                    "date": 1628085290886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n         return $this->respond([\n             'status' => true,\n             'message' => 'Like successfully.',\n             'data' => '',\n+            'is_like' => $request->get('like'),\n             'error' => false,\n             'errors' => '',\n         ]);\n     }\n"
                },
                {
                    "date": 1628085299887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n         $user = Auth::user();\n \n         $validation = Validator::make($request->all(), [\n             'media_id' => 'required',\n-            'comment' => 'required',\n+            'like' => 'required',\n         ]);\n         $data = $request->all();\n         if ($validation->fails()) {\n             //return $this->throwValidation($validation->messages()->first());\n"
                },
                {
                    "date": 1628085354223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,13 @@\n             'user_id' => $user->id,\n             'voxo_media_id' => $request->get('media_id'),\n             'like_count' => $request->get('like'),\n         ];\n-        VoxoMediaLike::create($arr);\n+        if($request->get('like') == 1){\n+            VoxoMediaLike::create($arr);\n+        }else{\n+            VoxoMediaLike::where('voxo_media_id', $request->get('media_id'))->delete();;\n+        }\n \n         return $this->respond([\n             'status' => true,\n             'message' => 'Like successfully.',\n"
                },
                {
                    "date": 1628085470481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n         ];\n         if($request->get('like') == 1){\n             VoxoMediaLike::create($arr);\n         }else{\n-            VoxoMediaLike::where('voxo_media_id', $request->get('media_id'))->delete();;\n+            VoxoMediaLike::where('voxo_media_id', $request->get('media_id'))->delete();\n         }\n \n         return $this->respond([\n             'status' => true,\n"
                },
                {
                    "date": 1628085750518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n             'user_id' => $user->id,\n             'voxo_media_id' => $request->get('media_id'),\n             'comment' => $request->get('comment'),\n         ];\n-        VoxoMediaComment::create($arr);\n+        VoxoMediaComment::insert($arr);\n \n         return $this->respond([\n             'status' => true,\n             'message' => 'Comment successfully.',\n"
                },
                {
                    "date": 1628085829463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,10 @@\n         $arr = [\n             'user_id' => $user->id,\n             'voxo_media_id' => $request->get('media_id'),\n             'comment' => $request->get('comment'),\n+            'created_at' => date('Y-m-d H:i:s'),\n+            'updated_at' => date('Y-m-d H:i:s'),\n         ];\n         VoxoMediaComment::insert($arr);\n \n         return $this->respond([\n"
                },
                {
                    "date": 1628085910352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,11 +165,13 @@\n         $arr = [\n             'user_id' => $user->id,\n             'voxo_media_id' => $request->get('media_id'),\n             'like_count' => $request->get('like'),\n+            'created_at' => date('Y-m-d H:i:s'),\n+            'updated_at' => date('Y-m-d H:i:s'),\n         ];\n         if($request->get('like') == 1){\n-            VoxoMediaLike::create($arr);\n+            VoxoMediaLike::insert($arr);\n         }else{\n             VoxoMediaLike::where('voxo_media_id', $request->get('media_id'))->delete();\n         }\n \n"
                },
                {
                    "date": 1628085970786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,15 +170,17 @@\n             'updated_at' => date('Y-m-d H:i:s'),\n         ];\n         if($request->get('like') == 1){\n             VoxoMediaLike::insert($arr);\n+            $message = 'Like successfully.';\n         }else{\n             VoxoMediaLike::where('voxo_media_id', $request->get('media_id'))->delete();\n+            $message = 'dislike successfully.';\n         }\n \n         return $this->respond([\n             'status' => true,\n-            'message' => 'Like successfully.',\n+            'message' => $message,\n             'data' => '',\n             'is_like' => $request->get('like'),\n             'error' => false,\n             'errors' => '',\n"
                },
                {
                    "date": 1628096478868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,18 +163,18 @@\n             return response()->json($resp, $this->statusCode);\n         }\n         $arr = [\n             'user_id' => $user->id,\n-            'voxo_media_id' => $request->get('media_id'),\n-            'like_count' => $request->get('like'),\n+            'voxo_media_id' => $data['media_id'],\n+            'like_count' => $data['like'],\n             'created_at' => date('Y-m-d H:i:s'),\n             'updated_at' => date('Y-m-d H:i:s'),\n         ];\n-        if($request->get('like') == 1){\n+        if($data['like'] == 1){\n             VoxoMediaLike::insert($arr);\n             $message = 'Like successfully.';\n         }else{\n-            VoxoMediaLike::where('voxo_media_id', $request->get('media_id'))->delete();\n+            VoxoMediaLike::where('voxo_media_id', $data['media_id'])->delete();\n             $message = 'dislike successfully.';\n         }\n \n         return $this->respond([\n"
                },
                {
                    "date": 1628096490486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n         return $this->respond([\n             'status' => true,\n             'message' => $message,\n             'data' => '',\n-            'is_like' => $request->get('like'),\n+            'is_like' => $data['like'],\n             'error' => false,\n             'errors' => '',\n         ]);\n     }\n"
                },
                {
                    "date": 1629284504820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,10 @@\n use Illuminate\\Support\\Facades\\DB;\n use App\\Models\\VoxoMedias;\n use App\\Models\\VoxoMediaComment;\n use App\\Models\\VoxoMediaLike;\n+use TCG\\Voyager\\Models\\Post;\n+\n /**\n  * @group Authentication\n  *\n  * Class AuthController\n"
                },
                {
                    "date": 1629565936016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n use App\\Models\\VoxoMedias;\n use App\\Models\\VoxoMediaComment;\n use App\\Models\\VoxoMediaLike;\n use TCG\\Voyager\\Models\\Post;\n-\n+use Illuminate\\Support\\Str;\n /**\n  * @group Authentication\n  *\n  * Class AuthController\n@@ -59,13 +59,15 @@\n             $videoFile = $filename.'_'.time().'.'.$extension;\n            \n             Storage::disk('voxo')->put($videoFile, file_get_contents($request->file('video')->getRealPath()));\n \n-            $saveData = new VoxoMedias();\n-            $saveData->user_id = $user->id;\n+            $saveData = new Post();\n+            $saveData->author_id = $user->id;\n+            $saveData->post_type = $request->get('post_type');\n             $saveData->video = $videoFile;\n-            $saveData->description = $request->get('description');\n-            $saveData->audio_name = $request->get('audio_name');;\n+            $saveData->body = $request->get('description');\n+            $saveData->audio_name = $request->get('audio_name');\n+            \n             $saveData->type = 'Video';\n             \n             if($saveData->save()){\n                 $dataUser = array();\n"
                },
                {
                    "date": 1629566007525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,14 +62,11 @@\n \n             $saveData = new Post();\n             $saveData->author_id = $user->id;\n             $saveData->post_type = $request->get('post_type');\n-            $saveData->video = $videoFile;\n+            $saveData->audio_name = $request->get('audio_name');\n             $saveData->body = $request->get('description');\n-            $saveData->audio_name = $request->get('audio_name');\n-            \n-            $saveData->type = 'Video';\n-            \n+            $saveData->image = $videoFile;\n             if($saveData->save()){\n                 $dataUser = array();\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n"
                },
                {
                    "date": 1629566044645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     public function saveReels(Request $request){\n         $user = Auth::user();\n \n         $validation = Validator::make($request->all(), [\n-            'video' => 'required',\n+            'media' => 'required',\n             'description' => 'required',\n             'audio_name' => 'required',\n         ]);\n         \n@@ -44,29 +44,29 @@\n                 'errors' => '',\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n-        if($request->hasFile('video')) {\n+        if($request->hasFile('media')) {\n             //get filename with extension\n-            $filenamewithextension = $request->file('video')->getClientOriginalName();\n+            $filenamewithextension = $request->file('media')->getClientOriginalName();\n       \n             //get filename without extension\n             $filename = pathinfo($filenamewithextension, PATHINFO_FILENAME);\n       \n             //get file extension\n-            $extension = $request->file('video')->getClientOriginalExtension();\n+            $extension = $request->file('media')->getClientOriginalExtension();\n       \n             //filename to store\n-            $videoFile = $filename.'_'.time().'.'.$extension;\n+            $mediaFile = $filename.'_'.time().'.'.$extension;\n            \n-            Storage::disk('voxo')->put($videoFile, file_get_contents($request->file('video')->getRealPath()));\n+            Storage::disk('voxo')->put($mediaFile, file_get_contents($request->file('media')->getRealPath()));\n \n             $saveData = new Post();\n             $saveData->author_id = $user->id;\n             $saveData->post_type = $request->get('post_type');\n             $saveData->audio_name = $request->get('audio_name');\n             $saveData->body = $request->get('description');\n-            $saveData->image = $videoFile;\n+            $saveData->image = $mediaFile;\n             if($saveData->save()){\n                 $dataUser = array();\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n"
                },
                {
                    "date": 1629566123395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n use App\\Models\\VoxoMediaComment;\n use App\\Models\\VoxoMediaLike;\n use TCG\\Voyager\\Models\\Post;\n use Illuminate\\Support\\Str;\n+use App\\Models\\PostsMedia;\n /**\n  * @group Authentication\n  *\n  * Class AuthController\n@@ -66,8 +67,68 @@\n             $saveData->audio_name = $request->get('audio_name');\n             $saveData->body = $request->get('description');\n             $saveData->image = $mediaFile;\n             if($saveData->save()){\n+\n+                if($postData['post_type'] == 'REEL'){\n+            \n+                    if ($request->hasFile('media')) {\n+                        $allowedfileExtension=['mp4'];\n+                        $image = $request->file('media');\n+                        foreach ($postData['media'] as $files) {\n+                            $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n+                            if($check){\n+        \n+                                $destinationPath = 'storage/app/public/posts/';\n+                                $file_name = 'video_'.time() . \".\" . $files->getClientOriginalExtension();\n+                                $files->move($destinationPath, $file_name);\n+                                $postReel = $file_name;\n+        \n+                                $imageData = new PostsMedia();\n+                                $imageData->voxo_media_id = $postsData->id;\n+                                $imageData->media_files = $postReel;\n+                                $imageData->media_type =$postData['post_type'];\n+                                $imageData->mime_type = $files->getClientOriginalExtension();\n+                                $imageData->save();\n+                            }else{\n+                                $redirect = redirect()->back();\n+                                return $redirect->with([\n+                                    'message'    => 'Warning! Sorry Only Upload mp4',\n+                                    'alert-type' => 'error',\n+                                ]);\n+                            }\n+                        }\n+                        Post::where('id', $postsData->id)->update(['image' => 'video_play.png']);\n+                    }\n+                }else{\n+                    if ($request->hasFile('image')) {\n+                        $allowedfileExtension=['jpg','png','jpeg'];\n+                        $image = $request->file('image');\n+                        foreach ($postData['image'] as $files) {\n+                            $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n+                            if($check){\n+                                $destinationPath = 'storage/app/public/posts/';\n+                                $file_name = 'img_'.time() . \".\" . $files->getClientOriginalExtension();\n+                                $files->move($destinationPath, $file_name);\n+                                $postImage = $file_name;\n+                                $imageData = new PostsMedia();\n+                                $imageData->voxo_media_id = $postsData->id;\n+                                $imageData->media_files = $postImage;\n+                                $imageData->media_type = $postData['post_type'];\n+                                $imageData->mime_type = $files->getClientOriginalExtension();\n+                                $imageData->save();\n+                            }else{\n+                                $redirect = redirect()->back();\n+                                return $redirect->with([\n+                                    'message'    => 'Warning! Sorry Only Upload jpg, png, jpeg',\n+                                    'alert-type' => 'error',\n+                                ]);\n+                            }\n+                        }   \n+                        Post::where('id', $postsData->id)->update(['image' => $postImage]);\n+                    }\n+                }\n+\n                 $dataUser = array();\n                 $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->user_id;\n"
                },
                {
                    "date": 1629566276150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n                 'errors' => '',\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n+        $postData = $request->all();\n         if($request->hasFile('media')) {\n             //get filename with extension\n             $filenamewithextension = $request->file('media')->getClientOriginalName();\n       \n@@ -62,11 +63,11 @@\n             Storage::disk('voxo')->put($mediaFile, file_get_contents($request->file('media')->getRealPath()));\n \n             $saveData = new Post();\n             $saveData->author_id = $user->id;\n-            $saveData->post_type = $request->get('post_type');\n-            $saveData->audio_name = $request->get('audio_name');\n-            $saveData->body = $request->get('description');\n+            $saveData->post_type = $postData['post_type'];\n+            $saveData->audio_name = $postData['audio_name'];\n+            $saveData->body = $postData['description'];\n             $saveData->image = $mediaFile;\n             if($saveData->save()){\n \n                 if($postData['post_type'] == 'REEL'){\n@@ -89,13 +90,16 @@\n                                 $imageData->media_type =$postData['post_type'];\n                                 $imageData->mime_type = $files->getClientOriginalExtension();\n                                 $imageData->save();\n                             }else{\n-                                $redirect = redirect()->back();\n-                                return $redirect->with([\n-                                    'message'    => 'Warning! Sorry Only Upload mp4',\n-                                    'alert-type' => 'error',\n-                                ]);\n+                                $resp = [\n+                                    'status' => false,\n+                                    'data' => '',\n+                                    'message' => 'Warning! Sorry Only Upload mp4',\n+                                    'error' => true,\n+                                    'errors' => '',\n+                                ];\n+                                return response()->json($resp, $this->statusCode);\n                             }\n                         }\n                         Post::where('id', $postsData->id)->update(['image' => 'video_play.png']);\n                     }\n@@ -116,13 +120,16 @@\n                                 $imageData->media_type = $postData['post_type'];\n                                 $imageData->mime_type = $files->getClientOriginalExtension();\n                                 $imageData->save();\n                             }else{\n-                                $redirect = redirect()->back();\n-                                return $redirect->with([\n-                                    'message'    => 'Warning! Sorry Only Upload jpg, png, jpeg',\n-                                    'alert-type' => 'error',\n-                                ]);\n+                                $resp = [\n+                                    'status' => false,\n+                                    'data' => '',\n+                                    'message' => 'Warning! Sorry Only Upload jpg, png, jpeg',\n+                                    'error' => true,\n+                                    'errors' => '',\n+                                ];\n+                                return response()->json($resp, $this->statusCode);\n                             }\n                         }   \n                         Post::where('id', $postsData->id)->update(['image' => $postImage]);\n                     }\n"
                },
                {
                    "date": 1629566311338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                     }\n                 }\n \n                 $dataUser = array();\n-                $getVoxoMedia = VoxoMedias::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n+                $getVoxoMedia = Post::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->user_id;\n                 $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n                 $data['description'] = $getVoxoMedia->description;\n"
                },
                {
                    "date": 1629566342998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                     }\n                 }\n \n                 $dataUser = array();\n-                $getVoxoMedia = Post::with('comments', 'likes', 'users')->where('id', $saveData->id)->first();\n+                $getVoxoMedia = Post::with('comments', 'likes', 'users', 'postMedia')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->user_id;\n                 $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n                 $data['description'] = $getVoxoMedia->description;\n"
                },
                {
                    "date": 1629566357185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                     }\n                 }\n \n                 $dataUser = array();\n-                $getVoxoMedia = Post::with('comments', 'likes', 'users', 'postMedia')->where('id', $saveData->id)->first();\n+                $getVoxoMedia = Post::with('comments', 'likes', 'postMedia')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->user_id;\n                 $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n                 $data['description'] = $getVoxoMedia->description;\n"
                },
                {
                    "date": 1629566369557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                     }\n                 }\n \n                 $dataUser = array();\n-                $getVoxoMedia = Post::with('comments', 'likes', 'postMedia')->where('id', $saveData->id)->first();\n+                $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->user_id;\n                 $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n                 $data['description'] = $getVoxoMedia->description;\n"
                },
                {
                    "date": 1629566400275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                                 $files->move($destinationPath, $file_name);\n                                 $postReel = $file_name;\n         \n                                 $imageData = new PostsMedia();\n-                                $imageData->voxo_media_id = $postsData->id;\n+                                $imageData->voxo_media_id = $saveData->id;\n                                 $imageData->media_files = $postReel;\n                                 $imageData->media_type =$postData['post_type'];\n                                 $imageData->mime_type = $files->getClientOriginalExtension();\n                                 $imageData->save();\n@@ -114,9 +114,9 @@\n                                 $file_name = 'img_'.time() . \".\" . $files->getClientOriginalExtension();\n                                 $files->move($destinationPath, $file_name);\n                                 $postImage = $file_name;\n                                 $imageData = new PostsMedia();\n-                                $imageData->voxo_media_id = $postsData->id;\n+                                $imageData->voxo_media_id = $saveData->id;\n                                 $imageData->media_files = $postImage;\n                                 $imageData->media_type = $postData['post_type'];\n                                 $imageData->mime_type = $files->getClientOriginalExtension();\n                                 $imageData->save();\n"
                },
                {
                    "date": 1629566406822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n                                 $destinationPath = 'storage/app/public/posts/';\n                                 $file_name = 'img_'.time() . \".\" . $files->getClientOriginalExtension();\n                                 $files->move($destinationPath, $file_name);\n                                 $postImage = $file_name;\n+                                \n                                 $imageData = new PostsMedia();\n                                 $imageData->voxo_media_id = $saveData->id;\n                                 $imageData->media_files = $postImage;\n                                 $imageData->media_type = $postData['post_type'];\n"
                },
                {
                    "date": 1629566419918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n                                 ];\n                                 return response()->json($resp, $this->statusCode);\n                             }\n                         }\n-                        Post::where('id', $postsData->id)->update(['image' => 'video_play.png']);\n+                        Post::where('id', $saveData->id)->update(['image' => 'video_play.png']);\n                     }\n                 }else{\n                     if ($request->hasFile('image')) {\n                         $allowedfileExtension=['jpg','png','jpeg'];\n@@ -113,9 +113,9 @@\n                                 $destinationPath = 'storage/app/public/posts/';\n                                 $file_name = 'img_'.time() . \".\" . $files->getClientOriginalExtension();\n                                 $files->move($destinationPath, $file_name);\n                                 $postImage = $file_name;\n-                                \n+\n                                 $imageData = new PostsMedia();\n                                 $imageData->voxo_media_id = $saveData->id;\n                                 $imageData->media_files = $postImage;\n                                 $imageData->media_type = $postData['post_type'];\n@@ -131,9 +131,9 @@\n                                 ];\n                                 return response()->json($resp, $this->statusCode);\n                             }\n                         }   \n-                        Post::where('id', $postsData->id)->update(['image' => $postImage]);\n+                        Post::where('id', $saveData->id)->update(['image' => $postImage]);\n                     }\n                 }\n \n                 $dataUser = array();\n"
                },
                {
                    "date": 1629566460592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,16 +138,12 @@\n \n                 $dataUser = array();\n                 $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n-                $data['user_id'] = $getVoxoMedia->user_id;\n-                $data['video'] = env('APP_URL').'/storage/app/public/voxo/'.$getVoxoMedia->video;\n-                $data['description'] = $getVoxoMedia->description;\n+                $data['user_id'] = $getVoxoMedia->author_id;\n+                $data['media'] = env('APP_URL').'/storage/app/public/posts/'.$getVoxoMedia->video;\n+                $data['description'] = $getVoxoMedia->body;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n-                $data['comments'] = $getVoxoMedia->comments;\n-                $data['likes'] = $getVoxoMedia->likes;\n-                $data['total_comments'] = count($getVoxoMedia->comments);\n-                $data['total_likes'] = count($getVoxoMedia->likes);\n                 $dataU['id'] = $getVoxoMedia->users->id;\n                 $dataU['nick_name'] = $getVoxoMedia->users->user_name;\n                 $dataU['name'] = $getVoxoMedia->users->name;\n                 $dataU['full_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->avatar;\n"
                },
                {
                    "date": 1629566470179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,15 +142,8 @@\n                 $data['user_id'] = $getVoxoMedia->author_id;\n                 $data['media'] = env('APP_URL').'/storage/app/public/posts/'.$getVoxoMedia->video;\n                 $data['description'] = $getVoxoMedia->body;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n-                $dataU['id'] = $getVoxoMedia->users->id;\n-                $dataU['nick_name'] = $getVoxoMedia->users->user_name;\n-                $dataU['name'] = $getVoxoMedia->users->name;\n-                $dataU['full_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->avatar;\n-                $dataU['thumb_image'] = env('APP_URL').'/storage/app/public/'.$getVoxoMedia->users->thumb_avatar;\n-                \n-                $data['users'] = $dataU;\n                 $resp = [\n                     'status' => true,\n                     'data' => $data,\n                     'message' => 'Upload Successfully.',\n"
                },
                {
                    "date": 1629566487119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,22 +47,8 @@\n             return response()->json($resp, $this->statusCode);\n         }\n         $postData = $request->all();\n         if($request->hasFile('media')) {\n-            //get filename with extension\n-            $filenamewithextension = $request->file('media')->getClientOriginalName();\n-      \n-            //get filename without extension\n-            $filename = pathinfo($filenamewithextension, PATHINFO_FILENAME);\n-      \n-            //get file extension\n-            $extension = $request->file('media')->getClientOriginalExtension();\n-      \n-            //filename to store\n-            $mediaFile = $filename.'_'.time().'.'.$extension;\n-           \n-            Storage::disk('voxo')->put($mediaFile, file_get_contents($request->file('media')->getRealPath()));\n-\n             $saveData = new Post();\n             $saveData->author_id = $user->id;\n             $saveData->post_type = $postData['post_type'];\n             $saveData->audio_name = $postData['audio_name'];\n"
                },
                {
                    "date": 1629566647912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,8 @@\n             $saveData->author_id = $user->id;\n             $saveData->post_type = $postData['post_type'];\n             $saveData->audio_name = $postData['audio_name'];\n             $saveData->body = $postData['description'];\n-            $saveData->image = $mediaFile;\n             if($saveData->save()){\n \n                 if($postData['post_type'] == 'REEL'){\n             \n"
                },
                {
                    "date": 1629566689387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                 $dataUser = array();\n                 $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->author_id;\n-                $data['media'] = env('APP_URL').'/storage/app/public/posts/'.$getVoxoMedia->video;\n+                $data['media'] = env('APP_URL').'/storage/app/public/posts/'.$getVoxoMedia->image;\n                 $data['description'] = $getVoxoMedia->body;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $resp = [\n                     'status' => true,\n"
                },
                {
                    "date": 1629566739831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n                 $dataUser = array();\n                 $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n                 $data['id'] = $getVoxoMedia->id;\n                 $data['user_id'] = $getVoxoMedia->author_id;\n-                $data['media'] = env('APP_URL').'/storage/app/public/posts/'.$getVoxoMedia->image;\n+                $data['media'] = $getVoxoMedia->postMedia;\n                 $data['description'] = $getVoxoMedia->body;\n                 $data['audio_name'] = $getVoxoMedia->audio_name;\n                 $resp = [\n                     'status' => true,\n"
                },
                {
                    "date": 1629566988046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n                                 $imageData->media_type =$postData['post_type'];\n                                 $imageData->mime_type = $files->getClientOriginalExtension();\n                                 $imageData->save();\n                             }else{\n+                                echo 'dasdasd';die;\n                                 $resp = [\n                                     'status' => false,\n                                     'data' => '',\n                                     'message' => 'Warning! Sorry Only Upload mp4',\n"
                },
                {
                    "date": 1629567000911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n \n                 if($postData['post_type'] == 'REEL'){\n             \n                     if ($request->hasFile('media')) {\n+                        echo 'dasdasd';die;\n                         $allowedfileExtension=['mp4'];\n                         $image = $request->file('media');\n                         foreach ($postData['media'] as $files) {\n                             $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n@@ -75,9 +76,9 @@\n                                 $imageData->media_type =$postData['post_type'];\n                                 $imageData->mime_type = $files->getClientOriginalExtension();\n                                 $imageData->save();\n                             }else{\n-                                echo 'dasdasd';die;\n+                                \n                                 $resp = [\n                                     'status' => false,\n                                     'data' => '',\n                                     'message' => 'Warning! Sorry Only Upload mp4',\n"
                },
                {
                    "date": 1629567008439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,12 +57,12 @@\n \n                 if($postData['post_type'] == 'REEL'){\n             \n                     if ($request->hasFile('media')) {\n-                        echo 'dasdasd';die;\n                         $allowedfileExtension=['mp4'];\n                         $image = $request->file('media');\n                         foreach ($postData['media'] as $files) {\n+                            echo 'dasdasd';die;\n                             $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n                             if($check){\n         \n                                 $destinationPath = 'storage/app/public/posts/';\n"
                },
                {
                    "date": 1629567028097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             \n                     if ($request->hasFile('media')) {\n                         $allowedfileExtension=['mp4'];\n                         $image = $request->file('media');\n-                        foreach ($postData['media'] as $files) {\n+                        foreach ($image as $files) {\n                             echo 'dasdasd';die;\n                             $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n                             if($check){\n         \n"
                },
                {
                    "date": 1629567067936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,8 @@\n                     if ($request->hasFile('media')) {\n                         $allowedfileExtension=['mp4'];\n                         $image = $request->file('media');\n                         foreach ($image as $files) {\n-                            echo 'dasdasd';die;\n                             $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n                             if($check){\n         \n                                 $destinationPath = 'storage/app/public/posts/';\n"
                },
                {
                    "date": 1629567211569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,108 +46,112 @@\n             ];\n             return response()->json($resp, $this->statusCode);\n         }\n         $postData = $request->all();\n-        if($request->hasFile('media')) {\n-            $saveData = new Post();\n-            $saveData->author_id = $user->id;\n-            $saveData->post_type = $postData['post_type'];\n-            $saveData->audio_name = $postData['audio_name'];\n-            $saveData->body = $postData['description'];\n-            if($saveData->save()){\n-\n-                if($postData['post_type'] == 'REEL'){\n+        DB::beginTransaction();\n+        try {\n+            if($request->hasFile('media')) {\n+                $saveData = new Post();\n+                $saveData->author_id = $user->id;\n+                $saveData->post_type = $postData['post_type'];\n+                $saveData->audio_name = $postData['audio_name'];\n+                $saveData->body = $postData['description'];\n+                if($saveData->save()){\n+                    if($postData['post_type'] == 'REEL'){\n+                        if ($request->hasFile('media')) {\n+                            $allowedfileExtension=['mp4'];\n+                            $image = $request->file('media');\n+                            foreach ($image as $files) {\n+                                $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n+                                if($check){\n+                                    $destinationPath = 'storage/app/public/posts/';\n+                                    $file_name = 'video_'.time() . \".\" . $files->getClientOriginalExtension();\n+                                    $files->move($destinationPath, $file_name);\n+                                    $postReel = $file_name;\n             \n-                    if ($request->hasFile('media')) {\n-                        $allowedfileExtension=['mp4'];\n-                        $image = $request->file('media');\n-                        foreach ($image as $files) {\n-                            $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n-                            if($check){\n-        \n-                                $destinationPath = 'storage/app/public/posts/';\n-                                $file_name = 'video_'.time() . \".\" . $files->getClientOriginalExtension();\n-                                $files->move($destinationPath, $file_name);\n-                                $postReel = $file_name;\n-        \n-                                $imageData = new PostsMedia();\n-                                $imageData->voxo_media_id = $saveData->id;\n-                                $imageData->media_files = $postReel;\n-                                $imageData->media_type =$postData['post_type'];\n-                                $imageData->mime_type = $files->getClientOriginalExtension();\n-                                $imageData->save();\n-                            }else{\n-                                \n-                                $resp = [\n-                                    'status' => false,\n-                                    'data' => '',\n-                                    'message' => 'Warning! Sorry Only Upload mp4',\n-                                    'error' => true,\n-                                    'errors' => '',\n-                                ];\n-                                return response()->json($resp, $this->statusCode);\n+                                    $imageData = new PostsMedia();\n+                                    $imageData->voxo_media_id = $saveData->id;\n+                                    $imageData->media_files = $postReel;\n+                                    $imageData->media_type =$postData['post_type'];\n+                                    $imageData->mime_type = $files->getClientOriginalExtension();\n+                                    $imageData->save();\n+                                }else{\n+                                    $resp = [\n+                                        'status' => false,\n+                                        'data' => '',\n+                                        'message' => 'Warning! Sorry Only Upload mp4',\n+                                        'error' => true,\n+                                        'errors' => '',\n+                                    ];\n+                                    return response()->json($resp, $this->statusCode);\n+                                }\n                             }\n+                            Post::where('id', $saveData->id)->update(['image' => 'video_play.png']);\n+                            DB::commit();\n                         }\n-                        Post::where('id', $saveData->id)->update(['image' => 'video_play.png']);\n+                    }else{\n+                        if ($request->hasFile('image')) {\n+                            $allowedfileExtension=['jpg','png','jpeg'];\n+                            $image = $request->file('image');\n+                            foreach ($postData['image'] as $files) {\n+                                $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n+                                if($check){\n+                                    $destinationPath = 'storage/app/public/posts/';\n+                                    $file_name = 'img_'.time() . \".\" . $files->getClientOriginalExtension();\n+                                    $files->move($destinationPath, $file_name);\n+                                    $postImage = $file_name;\n+\n+                                    $imageData = new PostsMedia();\n+                                    $imageData->voxo_media_id = $saveData->id;\n+                                    $imageData->media_files = $postImage;\n+                                    $imageData->media_type = $postData['post_type'];\n+                                    $imageData->mime_type = $files->getClientOriginalExtension();\n+                                    $imageData->save();\n+                                }else{\n+                                    $resp = [\n+                                        'status' => false,\n+                                        'data' => '',\n+                                        'message' => 'Warning! Sorry Only Upload jpg, png, jpeg',\n+                                        'error' => true,\n+                                        'errors' => '',\n+                                    ];\n+                                    return response()->json($resp, $this->statusCode);\n+                                }\n+                            }   \n+                            Post::where('id', $saveData->id)->update(['image' => $postImage]);\n+                            DB::commit();\n+                        }\n                     }\n-                }else{\n-                    if ($request->hasFile('image')) {\n-                        $allowedfileExtension=['jpg','png','jpeg'];\n-                        $image = $request->file('image');\n-                        foreach ($postData['image'] as $files) {\n-                            $check=in_array($files->getClientOriginalExtension(),$allowedfileExtension);\n-                            if($check){\n-                                $destinationPath = 'storage/app/public/posts/';\n-                                $file_name = 'img_'.time() . \".\" . $files->getClientOriginalExtension();\n-                                $files->move($destinationPath, $file_name);\n-                                $postImage = $file_name;\n \n-                                $imageData = new PostsMedia();\n-                                $imageData->voxo_media_id = $saveData->id;\n-                                $imageData->media_files = $postImage;\n-                                $imageData->media_type = $postData['post_type'];\n-                                $imageData->mime_type = $files->getClientOriginalExtension();\n-                                $imageData->save();\n-                            }else{\n-                                $resp = [\n-                                    'status' => false,\n-                                    'data' => '',\n-                                    'message' => 'Warning! Sorry Only Upload jpg, png, jpeg',\n-                                    'error' => true,\n-                                    'errors' => '',\n-                                ];\n-                                return response()->json($resp, $this->statusCode);\n-                            }\n-                        }   \n-                        Post::where('id', $saveData->id)->update(['image' => $postImage]);\n-                    }\n+                    $dataUser = array();\n+                    $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n+                    $data['id'] = $getVoxoMedia->id;\n+                    $data['user_id'] = $getVoxoMedia->author_id;\n+                    $data['media'] = $getVoxoMedia->postMedia;\n+                    $data['description'] = $getVoxoMedia->body;\n+                    $data['audio_name'] = $getVoxoMedia->audio_name;\n+                    $resp = [\n+                        'status' => true,\n+                        'data' => $data,\n+                        'message' => 'Upload Successfully.',\n+                        'error' => false,\n+                        'errors' => '',\n+                    ];\n                 }\n \n-                $dataUser = array();\n-                $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n-                $data['id'] = $getVoxoMedia->id;\n-                $data['user_id'] = $getVoxoMedia->author_id;\n-                $data['media'] = $getVoxoMedia->postMedia;\n-                $data['description'] = $getVoxoMedia->body;\n-                $data['audio_name'] = $getVoxoMedia->audio_name;\n+            } else{\n                 $resp = [\n-                    'status' => true,\n-                    'data' => $data,\n-                    'message' => 'Upload Successfully.',\n-                    'error' => false,\n+                    'status' => false,\n+                    'data' => '',\n+                    'message' => 'Please upload video.',\n+                    'error' => true,\n                     'errors' => '',\n                 ];\n+\n             }\n-\n-        } else{\n-            $resp = [\n-                'status' => false,\n-                'data' => '',\n-                'message' => 'Please upload video.',\n-                'error' => true,\n-                'errors' => '',\n-            ];\n-\n+        } catch (\\Exception $e) {\n+            DB::rollback();\n+            // something went wrong\n         }\n         return response()->json($resp, $this->statusCode);\n     }\n \n"
                },
                {
                    "date": 1629567466056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n                     $dataUser = array();\n                     $getVoxoMedia = Post::with('postMedia')->where('id', $saveData->id)->first();\n                     $data['id'] = $getVoxoMedia->id;\n                     $data['user_id'] = $getVoxoMedia->author_id;\n-                    $data['media'] = $getVoxoMedia->postMedia;\n+                    $data['mediafiles'] = $getVoxoMedia->postMedia;\n                     $data['description'] = $getVoxoMedia->body;\n                     $data['audio_name'] = $getVoxoMedia->audio_name;\n                     $resp = [\n                         'status' => true,\n"
                }
            ],
            "date": 1628060675887,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers\\API\\V1;\n\nuse Validator;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Storage;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\nuse Image;\nuse App\\User;\nuse Illuminate\\Support\\Facades\\DB;\n\n/**\n * @group Authentication\n *\n * Class AuthController\n *\n * Fullfills all aspects related to authenticate a user.\n */\nclass VoxoController extends APIController\n{\n    public function saveReels(Request $request){\n        $user = Auth::user();\n\n        $validation = Validator::make($request->all(), [\n            'video' => 'required',\n            'social_id' => 'required',\n            'social_type' => 'required',\n            //'device_token' => 'required',\n            'device_type' => 'required',\n        ]);\n        \n        if ($validation->fails()) {\n            //return $this->throwValidation($validation->messages()->first());\n            $resp = [\n                'status' => false,\n                'data' => '',\n                'message' => $validation->messages()->first(),\n                'error' => true,\n                'errors' => '',\n            ];\n            return response()->json($resp, $this->statusCode);\n        }\n\n    }\n}"
        }
    ]
}